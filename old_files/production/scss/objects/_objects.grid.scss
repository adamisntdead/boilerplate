/*------------------------------------
    @OBJECTS #GRID
------------------------------------*/

.wrapper,
.container {
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    max-width: 1024px;
    padding: 0 $gutter-width;
}


// Grid columns

.row {
	@include clearfix;
	margin-left: -$gutter-width;
	margin-right: -$gutter-width;

	> * {
		padding: 0 $gutter-width;
	}
}

// Total columns
$cols: 12;

// Break points
$breaks: ($mobile "mobile") ($tablet "tablet") ($desktop "desktop") ($large "large");

// Extra small screen solumns - below 480px;
@for $i from 1 through $cols {
    .col-xs-#{$i} {
    	min-height: 1px;
      	float: left;
      	width: ($i / 12 * 100%);
      	position: relative;
	}
}


// Columns above 480px width
@each $point in $breaks {
	@for $i from 1 through $cols {
	    .col-#{nth($point,2)}-#{$i} {
	      	@media (min-width: #{nth($point,1)}) {
	      		min-height: 1px;
	        	float: left;
		      	width: ($i / 12 * 100%);
		      	position: relative;
	      	}
		}
 	}
}	

// Column offsets
@each $point in $breaks {
	@for $i from 0 through $cols {
	    .col-#{nth($point,2)}-offset-#{$i} {
	      	@media (min-width: #{nth($point,1)}) {
		      	margin-left: ($i / 12 * 100%);
	      	}
		}
 	}
}	

// Column push
@each $point in $breaks {
	@for $i from 1 through $cols {
	    .col-#{nth($point,2)}-push-#{$i} {
	      	@media (min-width: #{nth($point,1)}) {
		      	left: ($i / 12 * 100%);
	      	}
		}
 	}
}	

// // Column pull
@each $point in $breaks {
	@for $i from 1 through $cols {
	    .col-#{nth($point,2)}-pull-#{$i} {
	      	@media (min-width: #{nth($point,1)}) {
		      	right: ($i / 12 * 100%);
	      	}
		}
 	}
}